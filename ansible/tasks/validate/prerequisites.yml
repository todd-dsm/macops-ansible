# Pre-flight validation tasks. If these steps fail there's no reason to continue.
# Each task with either:
#   - Succeed, print a success_msg and move to the next task, or
#   - Fail, print a fail_msg and exit.
# IF this completes, then we are ready for the next step.
---
- name: Validate running on macOS
  assert:
    that:
      - ansible_os_family == "Darwin"
    fail_msg: "This automation is designed for macOS only"
    success_msg: "Pass: Running on macOS ({{ ansible_os_family }})"

- name: Validate required environment variables
  assert:
    that:
      - ansible_env[item] is defined
      - ansible_env[item] != ""
    fail_msg: "Fail: Required environment variable {{ item }} is not defined or empty."
    success_msg: "Pass: Environment variable {{ item }} = {{ ansible_env[item] }}."

  loop:
    - myFullName
    - myEmailAdd
    - myMBPisFor
    - adminDir

# File/Directory existence validations using assert pattern
- name: Check admin directory
  ansible.builtin.stat:
    path: "{{ ansible_env.adminDir }}"
  register: admin_dir_check

- name: Validate admin directory exists
  assert:
    that:
      - admin_dir_check.stat.exists
    fail_msg: "Fail: Admin directory {{ ansible_env.adminDir }} does not exist. Please run install-prep.sh first."
    success_msg: "Pass: Admin directory found at {{ ansible_env.adminDir }}."

- name: Check backup directory
  ansible.builtin.stat:
    path: "{{ ansible_env.backup_dir }}"
  register: backup_dir_check

- name: Validate backup directory exists
  assert:
    that:
      - backup_dir_check.stat.exists
    fail_msg: "Fail: Backup directory {{ ansible_env.backup_dir }} does not exist. Please run install-prep.sh first."
    success_msg: "Pass: Backup directory found at {{ ansible_env.backup_dir }}."

- name: Check SSH known_hosts file
  ansible.builtin.stat:
    path: "{{ ansible_env.knownHosts }}"
  register: known_hosts_check

- name: Validate SSH known_hosts file exists
  assert:
    that:
      - known_hosts_check.stat.exists
    fail_msg: "Fail: SSH known_hosts file {{ ansible_env.knownHosts }} does not exist. Please ensure SSH is configured."
    success_msg: "Pass: SSH known_hosts file found at {{ ansible_env.knownHosts }}."

# Command availability validations
- name: Check Homebrew binary
  ansible.builtin.stat:
    path: "/opt/homebrew/bin/brew"
  register: homebrew_check

- name: Validate Homebrew is installed
  assert:
    that:
      - homebrew_check.stat.exists
    fail_msg: "Fail: Homebrew is not installed. Please run install-prep.sh first."
    success_msg: "Pass: Homebrew is installed at /opt/homebrew/bin/brew."

- name: Check Git binary
  ansible.builtin.stat:
    path: "/opt/homebrew/bin/git"
  register: git_check

- name: Validate Git is installed
  assert:
    that:
      - git_check.stat.exists
    fail_msg: "Fail: Git is not installed. Please run install-prep.sh first."
    success_msg: "Pass: Git is installed at /usr/bin/git."
