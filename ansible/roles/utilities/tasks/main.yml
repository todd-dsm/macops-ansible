---
# System utilities installation
- name: Install networking and system utilities
  community.general.homebrew:
    name: "{{ item }}"
    state: present
  loop:
    - bazel
    - cfssl
    - cmake
    - dockutil
    - dos2unix
    - ipcalc
    - jid
    - jq
    - libressl
    - nmap
    - psgrep
    - pstree
    - rsync
    - sipcalc
    - ssh-copy-id
    - tcpdump
    - testdisk
    - tmux
    - tree
    - watch
    - whatmask
    - yq
  register: network_utils

- name: Install build utilities
  community.general.homebrew:
    name: "{{ item }}"
    state: present
  loop:
    - cmake
    - bazel
  register: build_utils

- name: Check if /etc/paths exists
  ansible.builtin.stat:
    path: /etc/paths
  register: paths_check

- name: Add libressl to system path
  ansible.builtin.lineinfile:
    path: /etc/paths
    line: "/opt/homebrew/opt/libressl/bin"
    insertbefore: "/usr/local/bin"
    create: no
  become: yes
  when: paths_check.stat.exists
  register: libressl_path

# -----------------------------------------------------------------------------
# Add OMZSH plugins
# -----------------------------------------------------------------------------
- name: Check which OMZSH utility plugins are already configured
  ansible.builtin.shell: grep '^plugins=' "{{ ansible_env.HOME }}/.zshrc" | grep -o '{{ item }}'
  loop:
    - brew
    - nmap
    - encode64
    - gitignore
    - colored-man-pages
    - common-aliases
    - genpass
    - history
  register: plugin_checks
  failed_when: false
  changed_when: false

- name: Add missing OMZSH utility plugins to ~/.zshrc
  ansible.builtin.lineinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    regexp: '^plugins=\((.*)\)$'
    line: 'plugins=(\1 {{ item.item }})'
    backrefs: yes
  loop: "{{ plugin_checks.results }}"
  when: item.rc != 0
  register: plugins_added

# -----------------------------------------------------------------------------
# Add OMZSH Custom aliases and functions
# -----------------------------------------------------------------------------
- name: Copy custom shell aliases to Oh My ZSH
  ansible.builtin.copy:
    src: ../../../../configs/aliases.zsh
    dest: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/aliases.zsh"
    mode: '0644'
  register: aliases_copy

- name: Copy custom shell functions to Oh My ZSH
  ansible.builtin.copy:
    src: ../../../../configs/functions.zsh
    dest: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/functions.zsh"
    mode: '0644'
  register: functions_copy

# -----------------------------------------------------------------------------
# Display status
# -----------------------------------------------------------------------------
- name: Display system utilities installation status
  debug:
    msg:
      - "System utilities installation completed:"
      - "  - Network utilities: {% if network_utils.changed %}installed{% else %}already present{% endif %}"
      - "  - Build utilities: {% if build_utils.changed %}installed{% else %}already present{% endif %}"
      - "  - LibreSSL path: {% if libressl_path.changed %}added{% else %}already present{% endif %}"
      - "Shell utility plugins:"
      - "  - Total plugins processed: {{ plugin_checks.results | length }}"
      - "  - Plugins added: {{ plugins_added.results | selectattr('changed', 'equalto', true) | map(attribute='item.item') | list | join(', ') if plugins_added.changed else 'none' }}"
      - "  - Already configured: {{ plugin_checks.results | selectattr('rc', 'equalto', 0) | map(attribute='item') | list | join(', ') if plugin_checks.results | selectattr('rc', 'equalto', 0) | list | length > 0 else 'none' }}"
      - "Shell aliases and functions configured:"
      - "  - Aliases: {% if aliases_copy.changed %}updated{% else %}already present{% endif %}"
      - "  - Functions: {% if functions_copy.changed %}updated{% else %}already present{% endif %}"
